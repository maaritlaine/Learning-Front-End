(function () { 

    'use strict';

    angular
        .module('NMDb')
        .controller('moviesCtrl', movies);

    // You need to inject all the parameters used in a function into the function.
    // If you don't, you will get into trouble with minification/uglification.
    movies.$inject = ['$scope', 'movieService'];

    function movies($scope, movieService) {

         //var me = this; // TODO: why
         activate(); //TODO: why this

        function activate() {

            // Data is returned by the getMovies-function and then passed on to handling.
            // .then handles the returned data, .catch catches if there is and error returned?
            // TODO: learn about error handling and possible functionalities after a service call
            movieService.getMovies()
            .then(function (data) {
                $scope.movies = data;
            })
            .catch(function (error) {
                $scope.error = error + ' FUCK THIS SHIT.';
                //console.log(error); // TODO: what is this console that it is logging into
                //alert('Fuck this shit!');
            });

            $scope.movies = [
                { title: 'First', releaseYear: '2000', storyline: 'Shit happens.', genres: ['comedy'] },
                { title: 'Second', releaseYear: '1998', storyline: 'Shit happens.', genres: ['comedy', 'tragedy'] },
                { title: 'Third', releaseYear: '2014', storyline: 'Still images.', genres: ['action'] }
            ];
        }
    }

    // Attaching a movies collection into $scope. The collection is json.


    //TODO: use a service to fetch the movies from the back-end

})();
//TODO: make this into function
// Creating a controller in the NMDb application declared in the main module.
// The contoroller is bound to the html template by using ng-controller directive.
// The controller is responsible for creating the $scope then used to present data in the view.
// The $scope is passed empty into the controller which passes it back filled with all the cool things for the view.
